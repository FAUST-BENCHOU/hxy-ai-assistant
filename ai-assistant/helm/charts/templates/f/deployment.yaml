{{- if .Values.f.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hxy.f.fullname" . }}
  labels:
    {{- include "hxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.f.autoscaling.enabled }}
  replicas: {{ .Values.f.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hxy.f.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.f.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hxy.f.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      {{- with .Values.f.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hxy.f.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.f.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "hxy.f.name" $ }}
          securityContext:
            {{- toYaml .Values.f.securityContext | nindent 12 }}
          image: "{{ .Values.f.image.repository }}:{{ .Values.f.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.f.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.f.env }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "hxy.f.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            - name: DB_HOST
              value: {{ include "hxy.db.fullname" $ }}.{{ $.Release.Namespace }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: password
            - name: DATABASE_URL
              value: $(DB_DRIVER)://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?search_path=auth&sslmode=$(DB_SSL)
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jwt.secretName }}
                  key: secret
          ports:
            - name: f
              containerPort: 8080
              protocol: TCP
          {{- with .Values.f.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.f.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.f.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.f.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.f.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.f.persistence.enabled }}
        - name: f-data
          persistentVolumeClaim:
            claimName: {{ include "hxy.f.fullname" . }}-pvc
        {{- end }}
        {{- with .Values.f.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}